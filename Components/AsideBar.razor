@using CSE325_Team12_Project.Models
@inject NavigationManager NavigationManager



<aside class="asidebar @(Settings)">
    <div class="button-container">
        <Button Variant="ButtonVariant.Primary" Size="ButtonSize.Medium">
            @(IsChatsPage ? "Start a new conversation" : "Create a new troupe")
        </Button>
    </div>

    <div class="aside-content">
        <h2 class="aside-title">@Title</h2>
        <div class="direct-messages">
            @if (IsChatsPage)
            {
                @foreach (var user in DirectMessages)
                {
                    <div class="message">
                        <div class="profile-image">
                            <img src="@user.AvatarUrl" alt="Profile Icon" width="50px" />
                        </div>
                        <p>@user.Name</p>
                    </div>
                }
            }
            else
            {
                @foreach (var troupe in Troupes)
                {
                    <div class="message">
                        <div class="profile-image">
                            <img src="@troupe.AvatarUrl" alt="Troupe Icon" width="50px" />
                        </div>
                        <p>@troupe.Name</p>
                    </div>
                }
            }
        </div>
    </div>
</aside>

@code {
    private string Title => IsChatsPage ? "Direct Messages" : "Troupes";
    private string Settings => !IsSettings ? "visible" : "hidden";
    private bool IsChatsPage => NavigationManager.Uri.Contains("/chats");
    private bool IsSettings => NavigationManager.Uri.Contains("/settings");


    // Data Simulation, replace with your real services
    private List<User> DirectMessages = new()
    {
        new User { Name = "Alice", AvatarUrl = "images/Profile.svg" },
        new User { Name = "Bob", AvatarUrl = "images/Profile.svg" }
    };

    private List<Troupe> Troupes = new()
    {
        new Troupe { Name = "CSE325 Team", AvatarUrl = "images/Profile.svg" },
        new Troupe { Name = "Chess Club", AvatarUrl = "images/Profile.svg" }
    };

        protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}